
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Organization {
  id          String      @id @default(cuid())
  name        String
  users       User[]
  employees   Employee[]
  departments Department[]
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt

  @@index([name])
}

model Department {
  id             String       @id @default(cuid())
  name           String
  organizationId String
  organization   Organization @relation(fields: [organizationId], references: [id])
  employees      Employee[]
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt

  @@index([organizationId])
}

model Employee {
  id             String       @id @default(cuid())
  firstName      String
  lastName       String
  email          String       @unique
  position       String
  departmentId   String
  department     Department   @relation(fields: [departmentId], references: [id])
  organizationId String
  organization   Organization @relation(fields: [organizationId], references: [id])
  startDate      DateTime     @default(now())
  status         String       @default("ACTIVE")
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt

  @@index([organizationId])
  @@index([departmentId])
  @@index([email])
}

model User {
  id             String         @id @default(cuid())
  email          String         @unique
  hashedPassword String
  firstName      String?
  lastName       String?
  role           String         @default("USER")
  organizationId String?
  organization   Organization?  @relation(fields: [organizationId], references: [id])
  notifications  Notification[]
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt

  @@index([email])
  @@index([organizationId])
}

model Notification {
  id        String   @id @default(cuid())
  type      String
  title     String
  message   String
  read      Boolean  @default(false)
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
  @@index([type])
}
